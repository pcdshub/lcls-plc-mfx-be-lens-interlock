<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4018.10">
  <POU Name="MAIN" Id="{8f63f011-6378-4f32-beaf-4437ace2efcc}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[(* 16-bit cycle counter *)
iCycleCount := iCycleCount + 1;

fbEnergyTables();

(*  EPICS Rx UPDATE
    Modbus receive
*)
p_ModbusRx_OutputCoils();
p_ModbusRx_PLCMemory();
p_XLegacyPLCModbus();

(* Hard-code Lens Radii (microns) *)
XRT_LENSES[1].RADIUS := 750.0;
XRT_LENSES[2].RADIUS := 428.6;
XRT_LENSES[3].RADIUS := 333.3;

TFS_LENSES[1].RADIUS  := 0.0;   // A pinhole, not a lens.
TFS_LENSES[2].RADIUS  := 500.0;
TFS_LENSES[3].RADIUS  := 300.0;
TFS_LENSES[4].RADIUS  := 250.0;
TFS_LENSES[5].RADIUS  := 200.0;
TFS_LENSES[6].RADIUS  := 125.0;
TFS_LENSES[7].RADIUS  := 62.5;
TFS_LENSES[8].RADIUS  := 50.0;
TFS_LENSES[9].RADIUS  := 50.0;
TFS_LENSES[10].RADIUS := 50.0;

(* Additional trip settings

    Pre-focus 	Minimum energy [keV] 	Requires transfocator lens low [keV] 	Requires transfocator lens high [keV]
    NO_LENS 	0 	n/a 	n/a
    LENS3_333 	9.5 	9.5 	11.11
    LENS2_428 	8.28 	8.28 	10.02
    LENS1_750 	5.96 	5.96 	8.02

*)

(* No XRT lens / no restriction*)
afbRequiresLensEnergyRange[0].fLow := 0.0;
afbRequiresLensEnergyRange[0].fHigh := 0.0;
fMinEnergies[0] := 0.0;

(* 333.33um Lens 3: 9.5~11.11keV *)
afbRequiresLensEnergyRange[3].fLow := 9500.0; 
afbRequiresLensEnergyRange[3].fHigh := 11110.0;
fMinEnergies[3] := 9500.0;

(* 428um Lens 2: 8.28 ~ 10.02 keV *)
afbRequiresLensEnergyRange[2].fLow := 8280.0; 
afbRequiresLensEnergyRange[2].fHigh := 10020.0;
fMinEnergies[2] := 8280.0;

(* 750um Lens 1: 5.96 ~ 8.02 keV *)
afbRequiresLensEnergyRange[1].fLow := 5960.0; 
afbRequiresLensEnergyRange[1].fHigh := 8020.0;
fMinEnergies[1] := 5960.0;


(*  MPS LOGIC SUMMARY *)
p_MPSSup();

(* 	EPICS Tx UPDATE
    Modbus Map Report
    IMPORTANT: This is the LAST subroutine to be called.
*)
p_ModbusTx_InputCoils();
p_ModbusTx_InputReg();
p_ModbusTx_PLCMemory();

]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>