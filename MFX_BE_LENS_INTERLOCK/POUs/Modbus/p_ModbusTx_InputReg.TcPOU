<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.18">
  <POU Name="p_ModbusTx_InputReg" Id="{1531d535-cff0-4bc5-94f7-4996acc25643}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM p_ModbusTx_InputReg
VAR

END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[mb_Input_Registers[0]:=iCycleCount;  //System info
mb_Input_Registers[1]:=0;  //System info
mb_Input_Registers[2]:=0;  //System info
mb_Input_Registers[3]:=0;  //System info
mb_Input_Registers[4]:=0;  //System info
mb_Input_Registers[5]:=0;  //System info
mb_Input_Registers[6]:=0;  //System info
mb_Input_Registers[7]:=0;  //System info
mb_Input_Registers[8]:=0;  //System info
mb_Input_Registers[9]:=0;  //System info
mb_Input_Registers[10]:=0;  //VG pressure readbacks
mb_Input_Registers[11]:=0;  //VG pressure readbacks
mb_Input_Registers[12]:=0;  //VG pressure readbacks
mb_Input_Registers[13]:=0;  //VG pressure readbacks
mb_Input_Registers[14]:=0;  //VG pressure readbacks
mb_Input_Registers[15]:=0;  //VG pressure readbacks
mb_Input_Registers[16]:=0;  //VG pressure readbacks
mb_Input_Registers[17]:=0;  //VG pressure readbacks
mb_Input_Registers[18]:=0;  //VG pressure readbacks
mb_Input_Registers[19]:=0;  //VG pressure readbacks
mb_Input_Registers[20]:=0;  //VG pressure readbacks
mb_Input_Registers[21]:=0;  //VG pressure readbacks
mb_Input_Registers[22]:=0;  //VG pressure readbacks
mb_Input_Registers[23]:=0;  //VG pressure readbacks
mb_Input_Registers[24]:=0;  //VG pressure readbacks
mb_Input_Registers[25]:=0;  //VG pressure readbacks
mb_Input_Registers[26]:=0;  //VG pressure readbacks
mb_Input_Registers[27]:=0;  //VG pressure readbacks
mb_Input_Registers[28]:=0;  //VG pressure readbacks
mb_Input_Registers[29]:=0;  //VG pressure readbacks
mb_Input_Registers[30]:=0;  //VG pressure readbacks
mb_Input_Registers[31]:=0;  //VG pressure readbacks
mb_Input_Registers[32]:=0;  //VG pressure readbacks
mb_Input_Registers[33]:=0;  //VG pressure readbacks
mb_Input_Registers[34]:=0;  //VG pressure readbacks
mb_Input_Registers[35]:=0;  //VG pressure readbacks
mb_Input_Registers[36]:=0;  //VG pressure readbacks
mb_Input_Registers[37]:=0;  //VG pressure readbacks
mb_Input_Registers[38]:=0;  //VG pressure readbacks
mb_Input_Registers[39]:=0;  //VG pressure readbacks
mb_Input_Registers[40]:=0;  //VG pressure readbacks
mb_Input_Registers[41]:=0;  //VG pressure readbacks
mb_Input_Registers[42]:=0;  //VG pressure readbacks
mb_Input_Registers[43]:=0;  //VG pressure readbacks
mb_Input_Registers[44]:=0;  //VG pressure readbacks
mb_Input_Registers[45]:=0;  //VG pressure readbacks
mb_Input_Registers[46]:=0;  //VG pressure readbacks
mb_Input_Registers[47]:=0;  //VG pressure readbacks
mb_Input_Registers[48]:=0;  //VG pressure readbacks
mb_Input_Registers[49]:=0;  //VG pressure readbacks
mb_Input_Registers[50]:=0;  //VG pressure readbacks
mb_Input_Registers[51]:=0;  //VG pressure readbacks
mb_Input_Registers[52]:=0;  //VG pressure readbacks
mb_Input_Registers[53]:=0;  //VG pressure readbacks
mb_Input_Registers[54]:=0;  //VG pressure readbacks
mb_Input_Registers[55]:=0;  //VG pressure readbacks
mb_Input_Registers[56]:=0;  //VG pressure readbacks
mb_Input_Registers[57]:=0;  //VG pressure readbacks
mb_Input_Registers[58]:=0;  //VG pressure readbacks
mb_Input_Registers[59]:=0;  //VG pressure readbacks
mb_Input_Registers[60]:=0;  //VG pressure readbacks
mb_Input_Registers[61]:=0;  //VG pressure readbacks
mb_Input_Registers[62]:=0;  //VG pressure readbacks
mb_Input_Registers[63]:=0;  //VG pressure readbacks
mb_Input_Registers[64]:=0;  //VG pressure readbacks
mb_Input_Registers[65]:=0;  //VG pressure readbacks
mb_Input_Registers[66]:=0;  //VG pressure readbacks
mb_Input_Registers[67]:=0;  //VG pressure readbacks
mb_Input_Registers[68]:=0;  //VG pressure readbacks
mb_Input_Registers[69]:=0;  //VG pressure readbacks
mb_Input_Registers[70]:=0;  //VG state readbacks
mb_Input_Registers[71]:=0;  //VG state readbacks
mb_Input_Registers[72]:=0;  //VG state readbacks
mb_Input_Registers[73]:=0;  //VG state readbacks
mb_Input_Registers[74]:=0;  //VG state readbacks
mb_Input_Registers[75]:=0;  //VG state readbacks
mb_Input_Registers[76]:=0;  //VG state readbacks
mb_Input_Registers[77]:=0;  //VG state readbacks
mb_Input_Registers[78]:=0;  //VG state readbacks
mb_Input_Registers[79]:=0;  //VG state readbacks
mb_Input_Registers[80]:=0;  //VG state readbacks
mb_Input_Registers[81]:=0;  //VG state readbacks
mb_Input_Registers[82]:=0;  //VG state readbacks
mb_Input_Registers[83]:=0;  //VG state readbacks
mb_Input_Registers[84]:=0;  //VG state readbacks
mb_Input_Registers[85]:=0;  //VG state readbacks
mb_Input_Registers[86]:=0;  //VG state readbacks
mb_Input_Registers[87]:=0;  //VG state readbacks
mb_Input_Registers[88]:=0;  //VG state readbacks
mb_Input_Registers[89]:=0;  //VG state readbacks
mb_Input_Registers[90]:=0;  //VG state readbacks
mb_Input_Registers[91]:=0;  //VG state readbacks
mb_Input_Registers[92]:=0;  //VG state readbacks
mb_Input_Registers[93]:=0;  //VG state readbacks
mb_Input_Registers[94]:=0;  //VG state readbacks
mb_Input_Registers[95]:=0;  //VG state readbacks
mb_Input_Registers[96]:=0;  //VG state readbacks
mb_Input_Registers[97]:=0;  //VG state readbacks
mb_Input_Registers[98]:=0;  //VG state readbacks
mb_Input_Registers[99]:=0;  //VG state readbacks
mb_Input_Registers[100]:=0;  //VG state readbacks
mb_Input_Registers[101]:=0;  //VG state readbacks
mb_Input_Registers[102]:=0;  //VG state readbacks
mb_Input_Registers[103]:=0;  //VG state readbacks
mb_Input_Registers[104]:=0;  //VG state readbacks
mb_Input_Registers[105]:=0;  //VG state readbacks
mb_Input_Registers[106]:=0;  //VG state readbacks
mb_Input_Registers[107]:=0;  //VG state readbacks
mb_Input_Registers[108]:=0;  //VG state readbacks
mb_Input_Registers[109]:=0;  //VG state readbacks
mb_Input_Registers[110]:=0;  //VG state readbacks
mb_Input_Registers[111]:=0;  //VG state readbacks
mb_Input_Registers[112]:=0;  //VG state readbacks
mb_Input_Registers[113]:=0;  //VG state readbacks
mb_Input_Registers[114]:=0;  //VG state readbacks
mb_Input_Registers[115]:=0;  //VG state readbacks
mb_Input_Registers[116]:=0;  //VG state readbacks
mb_Input_Registers[117]:=0;  //VG state readbacks
mb_Input_Registers[118]:=0;  //VG state readbacks
mb_Input_Registers[119]:=0;  //VG state readbacks
mb_Input_Registers[120]:=0;  //default
mb_Input_Registers[121]:=0;  //default
mb_Input_Registers[122]:=0;  //default
mb_Input_Registers[123]:=0;  //default
mb_Input_Registers[124]:=0;  //default
mb_Input_Registers[125]:=0;  //default
mb_Input_Registers[126]:=0;  //default
mb_Input_Registers[127]:=0;  //default
mb_Input_Registers[128]:=0;  //default
mb_Input_Registers[129]:=0;  //default
mb_Input_Registers[130]:=0;  //default
mb_Input_Registers[131]:=0;  //default
mb_Input_Registers[132]:=0;  //default
mb_Input_Registers[133]:=0;  //default
mb_Input_Registers[134]:=0;  //default
mb_Input_Registers[135]:=0;  //default
mb_Input_Registers[136]:=0;  //default
mb_Input_Registers[137]:=0;  //default
mb_Input_Registers[138]:=0;  //default
mb_Input_Registers[139]:=0;  //default
mb_Input_Registers[140]:=0;  //default
mb_Input_Registers[141]:=0;  //default
mb_Input_Registers[142]:=0;  //default
mb_Input_Registers[143]:=0;  //default
mb_Input_Registers[144]:=0;  //default
mb_Input_Registers[145]:=0;  //default
mb_Input_Registers[146]:=0;  //default
mb_Input_Registers[147]:=0;  //default
mb_Input_Registers[148]:=0;  //default
mb_Input_Registers[149]:=0;  //default
mb_Input_Registers[150]:=0;  //default
mb_Input_Registers[151]:=0;  //default
mb_Input_Registers[152]:=0;  //default
mb_Input_Registers[153]:=0;  //default
mb_Input_Registers[154]:=0;  //default
mb_Input_Registers[155]:=0;  //default
mb_Input_Registers[156]:=0;  //default
mb_Input_Registers[157]:=0;  //default
mb_Input_Registers[158]:=0;  //default
mb_Input_Registers[159]:=0;  //default
mb_Input_Registers[160]:=0;  //default
mb_Input_Registers[161]:=0;  //default
mb_Input_Registers[162]:=0;  //default
mb_Input_Registers[163]:=0;  //default
mb_Input_Registers[164]:=0;  //default
mb_Input_Registers[165]:=0;  //default
mb_Input_Registers[166]:=0;  //default
mb_Input_Registers[167]:=0;  //default
mb_Input_Registers[168]:=0;  //default
mb_Input_Registers[169]:=0;  //default
mb_Input_Registers[170]:=0;  //default
mb_Input_Registers[171]:=0;  //default
mb_Input_Registers[172]:=0;  //default
mb_Input_Registers[173]:=0;  //default
mb_Input_Registers[174]:=0;  //default
mb_Input_Registers[175]:=0;  //default
mb_Input_Registers[176]:=0;  //default
mb_Input_Registers[177]:=0;  //default
mb_Input_Registers[178]:=0;  //default
mb_Input_Registers[179]:=0;  //default
mb_Input_Registers[180]:=0;  //default
mb_Input_Registers[181]:=0;  //default
mb_Input_Registers[182]:=0;  //default
mb_Input_Registers[183]:=0;  //default
mb_Input_Registers[184]:=0;  //default
mb_Input_Registers[185]:=0;  //default
mb_Input_Registers[186]:=0;  //default
mb_Input_Registers[187]:=0;  //default
mb_Input_Registers[188]:=0;  //default
mb_Input_Registers[189]:=0;  //default
mb_Input_Registers[190]:=0;  //default
mb_Input_Registers[191]:=0;  //default
mb_Input_Registers[192]:=0;  //default
mb_Input_Registers[193]:=0;  //default
mb_Input_Registers[194]:=0;  //default
mb_Input_Registers[195]:=0;  //default
mb_Input_Registers[196]:=0;  //default
mb_Input_Registers[197]:=0;  //default
mb_Input_Registers[198]:=0;  //default
mb_Input_Registers[199]:=0;  //default
mb_Input_Registers[200]:=0;  //default
mb_Input_Registers[201]:=0;  //default
mb_Input_Registers[202]:=0;  //default
mb_Input_Registers[203]:=0;  //default
mb_Input_Registers[204]:=0;  //default
mb_Input_Registers[205]:=0;  //default
mb_Input_Registers[206]:=0;  //default
mb_Input_Registers[207]:=0;  //default
mb_Input_Registers[208]:=0;  //default
mb_Input_Registers[209]:=0;  //default
mb_Input_Registers[210]:=0;  //default
mb_Input_Registers[211]:=0;  //default
mb_Input_Registers[212]:=0;  //default
mb_Input_Registers[213]:=0;  //default
mb_Input_Registers[214]:=0;  //default
mb_Input_Registers[215]:=0;  //default
mb_Input_Registers[216]:=0;  //default
mb_Input_Registers[217]:=0;  //default
mb_Input_Registers[218]:=0;  //default
mb_Input_Registers[219]:=0;  //default
mb_Input_Registers[220]:=0;  //default
mb_Input_Registers[221]:=0;  //default
mb_Input_Registers[222]:=0;  //default
mb_Input_Registers[223]:=0;  //default
mb_Input_Registers[224]:=0;  //default
mb_Input_Registers[225]:=0;  //default
mb_Input_Registers[226]:=0;  //default
mb_Input_Registers[227]:=0;  //default
mb_Input_Registers[228]:=0;  //default
mb_Input_Registers[229]:=0;  //default
mb_Input_Registers[230]:=0;  //default
mb_Input_Registers[231]:=0;  //default
mb_Input_Registers[232]:=0;  //default
mb_Input_Registers[233]:=0;  //default
mb_Input_Registers[234]:=0;  //default
mb_Input_Registers[235]:=0;  //default
mb_Input_Registers[236]:=0;  //default
mb_Input_Registers[237]:=0;  //default
mb_Input_Registers[238]:=0;  //default
mb_Input_Registers[239]:=0;  //default
mb_Input_Registers[240]:=0;  //default
mb_Input_Registers[241]:=0;  //default
mb_Input_Registers[242]:=0;  //default
mb_Input_Registers[243]:=0;  //default
mb_Input_Registers[244]:=0;  //default
mb_Input_Registers[245]:=0;  //default
mb_Input_Registers[246]:=0;  //default
mb_Input_Registers[247]:=0;  //default
mb_Input_Registers[248]:=0;  //default
mb_Input_Registers[249]:=0;  //default
mb_Input_Registers[250]:=0;  //default
mb_Input_Registers[251]:=0;  //default
mb_Input_Registers[252]:=0;  //default
mb_Input_Registers[253]:=0;  //default
mb_Input_Registers[254]:=0;  //default
mb_Input_Registers[255]:=0;  //default]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>